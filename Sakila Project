1. Get 10 cities in descending alphabetical order.
    SELECT * FROM sakila.city
    order by city DESC
    limit 0,10;

2. Get all films with "airplane" in the title.
    SELECT * FROM sakila.film
    where title like '%airplane%';

3. Get the highest payment amount.
    SELECT MAX(amount) FROM sakila.payment;

4. Get the number of records in the customer table for store id #1.
    SELECT count(store_id = 1) FROM sakila.inventory;

5. Get all payment records for customer with email address "NANCY.THOMAS@sakilacustomer.org"
    SELECT * FROM sakila.payment 
    inner join customer on customer.customer_id = payment.customer_id
    where customer.email = 'NANCY.THOMAS@sakilacustomer.org';

6. Use a View to get the film info for actor Bob Fawcett.
    SELECT * FROM sakila.actor_info
    where first_name = 'BOB' and last_name = 'FAWCETT';

7. Use a Stored Procedure to get the 4 inventory ids for the film "Alien Center" at Store #2.
    select @q_film_id := film_id from film where title ="ALIEN CENTER"
    set @p_film_count = 0;
    call sakila.film_in_stock(@q_film_id, 2, @p_film_id);

8. Insert a new store. Ensure that you use TRANSACTION. (This one is possible but it's tough! Pay attention to constraints and the order that you are inserting data.)
  START TRANSACTION;

	INSERT INTO sakila.address (address, city_id, district, phone, location)
	values ('823 Brown Lane', 421, 'Charlotte', 7043387767, point(12,5));

	INSERT INTO sakila.staff (first_name, last_name, address_id, store_id, username)
	values('Nick', 'Green', last_insert_id(), 2, 'nicko');

	select @staff_id:=MAX(staff_id) FROM sakila.staff;

	INSERT INTO sakila.address (address, city_id, district, phone, location)
	values ('817 cherry Drive', 421, 'Charlotte', 7043187265, point(12,6));

	INSERT INTO sakila.store (manager_staff_id, address_id)
	values(@staff_id, last_insert_id());

  ROLLBACK;

9. Update the timestamp to the current date/time for the new store you entered in the previous question. 
    START TRANSACTION;
    UPDATE sakila.store
    SET last_update = current_timestamp();
    ROLLBACK;

10. Delete the new store.
    START TRANSACTION;
    DELETE FROM sakila.store
    WHERE store_id = 3;
    ROLLBACK;
